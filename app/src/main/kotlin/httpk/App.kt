/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package httpk

import httpk.worker.Worker
import java.net.ServerSocket
import java.time.Instant
import java.time.ZoneId
import java.time.format.DateTimeFormatter

fun log(message: String) {
    val dateTimeFormatter = DateTimeFormatter
        .ofPattern("uuuu-MM-dd HH:mm:ss.SSS")
        .withZone(ZoneId.of("Asia/Tokyo"))
    val timestamp = dateTimeFormatter.format(Instant.now())
    println("[${timestamp}] [${Thread.currentThread().name}] $message")
}

class App() {

    fun listen(port: Int) {
        val serverSocket = ServerSocket(port)
        log("server start. waiting on port $port")

        serverSocket.use { dispatchRequests(it) }
    }

    private fun dispatchRequests(serverSocket: ServerSocket) {
        while (true) {
            val socket = serverSocket.accept()
            socket.use { Worker().execute(it) }
        }
    }

}

fun main() {
    Runtime.getRuntime().addShutdownHook(Thread { log("server terminated.") })

    App().listen(8080)
}
