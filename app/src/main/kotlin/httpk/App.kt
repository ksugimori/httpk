/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package httpk

import httpk.handler.EchoHandler
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import java.net.ServerSocket

// TODO パラメーターにする
private const val DEFAULT_SERVER_PORT = 8080

fun log(message: String) = println("[LOG] [${Thread.currentThread().name}] $message")

class App {
    private val port = DEFAULT_SERVER_PORT
    fun execute() = runBlocking(Dispatchers.IO) {
        val serverSocket = ServerSocket(port)
        log("server start. waiting on port $port")

        serverSocket.use { server ->
            while (true) {
                val client = server.accept()
                val echoHandler = EchoHandler()
                launch { echoHandler.handle(client) }
            }
        }
    }

}

fun main() {
    System.setProperty("kotlinx.coroutines.debug", "on")

    App().execute()
}
